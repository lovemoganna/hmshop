1.面向对象编程（oop）
封装，继承，多态和抽象。

2.封装
封装给对象提供了隐藏内部特性和行为的能力。
对象提供一些能被其他对象访问的方法来改变它内部的数据。
有3个修饰符：public private protected。访问权限不一样。

下面列出了使用封装的一些好处：
通过隐藏对象的属性来保护对象内部的状态。
提高了代码的可用性和可维护性，因为对象的行为可以被单独的改变或者是扩展。
禁止对象之间的不良交互提高模块化。

3.多态
多态编程语言给不同的底层数据类型做相同的接口展示的一种能力。
一个多态类型上的操作可以应用到其他类型的值上面。

4.继承
继承给对象提供了从基类获取字段和方法的能力。
集成提供代码的重用性，也可以在不修改类的情况下给现存的类添加新特性。

5.抽象
抽象是把想法从具体的实例中分离出来的步骤，因此，要根据他们的功能而不是实现细节来
创建类。Java 支持创建只暴漏接口而不包含方法实现的抽象的类。
这种抽象技术的主要目的是把类的行为和实现细节分离开。

6.抽象和封装的不同点
抽象和封装是互补的概念。一方面，抽象关注对象的行为。另一方面，封装关注对象行为的
细节。一般是通过隐藏对象内部状态信息做到封装，因此，封装可以看成是用来提供抽象的
一种策略。